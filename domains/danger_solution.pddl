(define (plan danger-problem-solution)
  (:problem danger-problem)
  (:variables ?state-step-11 - state ?term-name-step-8 - var ?victim-step-9 - actor ?state-step-10 - state ?step-step-10 - step ?state-step-3 - state ?step-step-3 - step)
  (:steps
     (0 (initial))
     (19 (assign-valence ?state-step-11 TRUE))
     (18 (assign-sec-term ?state-step-11 ?term-name-step-8))
     (17 (assign-first-term ?state-step-11 ?victim-step-9))
     (16 (assign-predicate ?state-step-11 AT))
     (15 (assign-first-term ?state-step-10 ?victim-step-9))
     (14 (assign-predicate ?state-step-10 ALIVE))
     (13 (assign-valence ?state-step-10 FALSE))
     (12 (assign-execution ?step-step-10 TRUE))
     (11 (assign-precond ?step-step-10 ?state-step-11))
     (10 (assign-effect ?step-step-10 ?state-step-10))
     (8 (assign-sec-term ?state-step-3 ?term-name-step-8))
     (7 (assign-first-term ?state-step-3 Hero))
     (6 (assign-predicate ?state-step-3 AT))
     (5 (assign-valence ?state-step-3 TRUE))
     (4 (assign-execution ?step-step-3 TRUE))
     (3 (assign-effect ?step-step-3 ?state-step-3))
     (9 (convey-danger-at ?term-name-step-8 ?step-step-10 ?victim-step-9 ?state-step-10 ?state-step-11))
     (2 (convey-in-danger Hero ?term-name-step-8 ?step-step-3 ?state-step-3))
     (1 (goal)))
  (:orderings
     (0 1)
     (0 2)
     (0 3)
     (0 4)
     (0 5)
     (0 6)
     (0 7)
     (0 8)
     (0 9)
     (0 10)
     (0 11)
     (0 12)
     (0 13)
     (0 14)
     (0 15)
     (0 16)
     (0 17)
     (0 18)
     (0 19)
     (2 1)
     (3 1)
     (3 2)
     (4 1)
     (4 2)
     (5 1)
     (5 2)
     (6 1)
     (6 2)
     (7 1)
     (7 2)
     (8 1)
     (8 2)
     (9 1)
     (9 2)
     (10 1)
     (10 9)
     (11 1)
     (11 9)
     (12 1)
     (12 9)
     (13 1)
     (13 9)
     (14 1)
     (14 9)
     (15 1)
     (15 9)
     (16 1)
     (16 9)
     (17 1)
     (17 9)
     (18 1)
     (18 9)
     (19 1)
     (19 9))
  (:causal-links
     (0 (not (bel-state-1-var FALSE ALIVE Hero)) 2)
     (0 (not (effect-of ?step-step-3 ?state-step-3)) 3)
     (0 (not (not-effect-of ?step-step-3 ?state-step-3)) 3)
     (0 (not (has-executed-status ?step-step-3)) 4)
     (0 (not (has-valence ?state-step-3)) 5)
     (0 (not (has-predicate-name ?state-step-3)) 6)
     (0 (not (has-first-term ?state-step-3)) 7)
     (0 (not (has-sec-term ?state-step-3)) 8)
     (0 (not (effect-of ?step-step-10 ?state-step-10)) 10)
     (0 (not (not-effect-of ?step-step-10 ?state-step-10)) 10)
     (0 (not (not-precond-of ?step-step-10 ?state-step-11)) 11)
     (0 (not (precond-of ?step-step-10 ?state-step-11)) 11)
     (0 (not (has-executed-status ?step-step-10)) 12)
     (0 (not (has-valence ?state-step-10)) 13)
     (0 (not (has-predicate-name ?state-step-10)) 14)
     (0 (not (has-first-term ?state-step-10)) 15)
     (0 (not (has-predicate-name ?state-step-11)) 16)
     (0 (not (has-first-term ?state-step-11)) 17)
     (0 (not (has-sec-term ?state-step-11)) 18)
     (0 (not (has-valence ?state-step-11)) 19)
     (2 (bel-in-danger Hero) 1)
     (3 (effect-of ?step-step-3 ?state-step-3) 2)
     (4 (executed ?step-step-3 TRUE) 2)
     (5 (truth ?state-step-3 TRUE) 2)
     (6 (predicate-of ?state-step-3 AT) 2)
     (7 (first-term-of ?state-step-3 Hero) 2)
     (8 (sec-term-of ?state-step-3 ?term-name-step-8) 2)
     (9 (bel-danger-at ?term-name-step-8) 2)
     (10 (effect-of ?step-step-10 ?state-step-10) 9)
     (11 (precond-of ?step-step-10 ?state-step-11) 9)
     (12 (executed ?step-step-10 TRUE) 9)
     (13 (truth ?state-step-10 FALSE) 9)
     (14 (predicate-of ?state-step-10 ALIVE) 9)
     (15 (first-term-of ?state-step-10 ?victim-step-9) 9)
     (16 (predicate-of ?state-step-11 AT) 9)
     (17 (first-term-of ?state-step-11 ?victim-step-9) 9)
     (18 (sec-term-of ?state-step-11 ?term-name-step-8) 9)
     (19 (truth ?state-step-11 TRUE) 9))


  (:negative-bindings
    (edge ?step-step-10 ?step-step-3)
    (edge ?state-step-10 ?state-step-3)
    (edge ?state-step-11 ?state-step-3)
    (edge ?state-step-11 ?state-step-10)
    (edge (not (effect-of ?step-step-10 ?state-step-10)) (not (effect-of ?step-step-3 ?state-step-3)))
    (edge (not (bel-state-1-var FALSE ALIVE Hero)) (not (bel-state-1-var FALSE ALIVE ?victim-step-9)))))